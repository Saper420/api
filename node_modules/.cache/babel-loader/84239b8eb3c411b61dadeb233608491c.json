{"ast":null,"code":"import _toConsumableArray from\"C:/Users/SaPeR/Desktop/Kodilla/pizzeria_2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/SaPeR/Desktop/Kodilla/pizzeria_2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{API_URL}from\"../config\";//selector\nexport var getAllTables=function getAllTables(state){return state.tables;};export var getAllStatuses=function getAllStatuses(state){return state.statuses;};export var getTablesById=function getTablesById(state,id){return state.tables.find(function(table){return table.id==id;});};//actions\nvar createActionName=function createActionName(actionName){return\"app/tables/\".concat(actionName);};var EDIT_TABLE=createActionName(\"EDIT_TABLE\");var UPDATE_TABLES=createActionName(\"UPDATE_TABLES\");//action creators\nexport var editTable=function editTable(payload){return{type:EDIT_TABLE,payload:payload};};export var updateTables=function updateTables(payload){return{type:UPDATE_TABLES,payload:payload};};export var fetchTables=function fetchTables(){return function(dispatch){fetch(API_URL).then(function(res){return res.json();}).then(function(tables){return dispatch(updateTables(tables));});};};export var tablesReducer=function tablesReducer(){var statePart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case EDIT_TABLE:return statePart.map(function(table){return table.id==action.payload.id?_objectSpread(_objectSpread({},table),action.payload):table;});case UPDATE_TABLES:return _toConsumableArray(action.payload);default:return statePart;}};","map":{"version":3,"sources":["C:/Users/SaPeR/Desktop/Kodilla/pizzeria_2/src/redux/tablesRedux.js"],"names":["API_URL","getAllTables","state","tables","getAllStatuses","statuses","getTablesById","id","find","table","createActionName","actionName","EDIT_TABLE","UPDATE_TABLES","editTable","payload","type","updateTables","fetchTables","dispatch","fetch","then","res","json","tablesReducer","statePart","action","map"],"mappings":"qQAAA,OAASA,OAAT,KAAwB,WAAxB,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAjB,EAArB,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,QAAWA,CAAAA,KAAK,CAACG,QAAjB,EAAvB,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,KAAD,CAAQK,EAAR,QAC3BL,CAAAA,KAAK,CAACC,MAAN,CAAaK,IAAb,CAAkB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACF,EAAN,EAAYA,EAAvB,EAAlB,CAD2B,EAAtB,CAGP;AACA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,UAAD,6BAA8BA,UAA9B,GAAzB,CACA,GAAMC,CAAAA,UAAU,CAAGF,gBAAgB,CAAC,YAAD,CAAnC,CACA,GAAMG,CAAAA,aAAa,CAAGH,gBAAgB,CAAC,eAAD,CAAtC,CAEA;AACA,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,QAAc,CACrCC,IAAI,CAAEJ,UAD+B,CAErCG,OAAO,CAAPA,OAFqC,CAAd,EAAlB,CAIP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,OAAD,QAAc,CACxCC,IAAI,CAAEH,aADkC,CAExCE,OAAO,CAAPA,OAFwC,CAAd,EAArB,CAKP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,MAAO,UAACC,QAAD,CAAc,CACnBC,KAAK,CAACpB,OAAD,CAAL,CACGqB,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAAClB,MAAD,QAAYgB,CAAAA,QAAQ,CAACF,YAAY,CAACd,MAAD,CAAb,CAApB,EAFR,EAGD,CAJD,CAKD,CANM,CAQP,MAAO,IAAMqB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAA4B,IAA3BC,CAAAA,SAA2B,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACV,IAAf,EACE,IAAKJ,CAAAA,UAAL,CACE,MAAOa,CAAAA,SAAS,CAACE,GAAV,CAAc,SAAClB,KAAD,QACnBA,CAAAA,KAAK,CAACF,EAAN,EAAYmB,MAAM,CAACX,OAAP,CAAeR,EAA3B,gCAAqCE,KAArC,EAA+CiB,MAAM,CAACX,OAAtD,EAAkEN,KAD/C,EAAd,CAAP,CAGF,IAAKI,CAAAA,aAAL,CACE,0BAAWa,MAAM,CAACX,OAAlB,EACF,QACE,MAAOU,CAAAA,SAAP,CARJ,CAUD,CAXM","sourcesContent":["import { API_URL } from \"../config\";\r\n\r\n//selector\r\nexport const getAllTables = (state) => state.tables;\r\nexport const getAllStatuses = (state) => state.statuses;\r\nexport const getTablesById = (state, id) =>\r\n  state.tables.find((table) => table.id == id);\r\n\r\n//actions\r\nconst createActionName = (actionName) => `app/tables/${actionName}`;\r\nconst EDIT_TABLE = createActionName(\"EDIT_TABLE\");\r\nconst UPDATE_TABLES = createActionName(\"UPDATE_TABLES\");\r\n\r\n//action creators\r\nexport const editTable = (payload) => ({\r\n  type: EDIT_TABLE,\r\n  payload,\r\n});\r\nexport const updateTables = (payload) => ({\r\n  type: UPDATE_TABLES,\r\n  payload,\r\n});\r\n\r\nexport const fetchTables = () => {\r\n  return (dispatch) => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((tables) => dispatch(updateTables(tables)));\r\n  };\r\n};\r\n\r\nexport const tablesReducer = (statePart = [], action) => {\r\n  switch (action.type) {\r\n    case EDIT_TABLE:\r\n      return statePart.map((table) =>\r\n        table.id == action.payload.id ? { ...table, ...action.payload } : table\r\n      );\r\n    case UPDATE_TABLES:\r\n      return [...action.payload];\r\n    default:\r\n      return statePart;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}