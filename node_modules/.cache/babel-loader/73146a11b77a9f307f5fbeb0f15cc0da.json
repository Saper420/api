{"ast":null,"code":"import { API_URL } from \"../config\"; //selector\n\nexport const getAllTables = state => state.tables;\nexport const getAllStatuses = state => state.statuses;\nexport const getTablesById = (state, id) => state.tables.find(table => table.id == id); //actions\n\nconst createActionName = actionName => `app/tables/${actionName}`;\n\nconst EDIT_TABLE = createActionName(\"EDIT_TABLE\");\nconst UPDATE_TABLES = createActionName(\"UPDATE_TABLES\"); //action creators\n\nexport const editTable = payload => ({\n  type: EDIT_TABLE,\n  payload\n});\nexport const updateTables = payload => ({\n  type: UPDATE_TABLES,\n  payload\n});\nexport const fetchTables = () => {\n  return dispatch => {\n    fetch(API_URL).then(res => res.json()).then(tables => dispatch(updateTables(tables)));\n  };\n};\nexport const tableReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EDIT_TABLE:\n      return statePart.map(table => table.id == action.payload.id ? { ...table,\n        ...action.payload\n      } : table);\n\n    case UPDATE_TABLES:\n      return [...action.payload];\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["C:/Users/SaPeR/Desktop/Kodilla/pizzeria_2/src/redux/tablesRedux.js"],"names":["API_URL","getAllTables","state","tables","getAllStatuses","statuses","getTablesById","id","find","table","createActionName","actionName","EDIT_TABLE","UPDATE_TABLES","editTable","payload","type","updateTables","fetchTables","dispatch","fetch","then","res","json","tableReducer","statePart","action","map"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACC,MAAtC;AACP,OAAO,MAAMC,cAAc,GAAIF,KAAD,IAAWA,KAAK,CAACG,QAAxC;AACP,OAAO,MAAMC,aAAa,GAAG,CAACJ,KAAD,EAAQK,EAAR,KAC3BL,KAAK,CAACC,MAAN,CAAaK,IAAb,CAAmBC,KAAD,IAAWA,KAAK,CAACF,EAAN,IAAYA,EAAzC,CADK,C,CAGP;;AACA,MAAMG,gBAAgB,GAAIC,UAAD,IAAiB,cAAaA,UAAW,EAAlE;;AACA,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,YAAD,CAAnC;AACA,MAAMG,aAAa,GAAGH,gBAAgB,CAAC,eAAD,CAAtC,C,CAEA;;AACA,OAAO,MAAMI,SAAS,GAAIC,OAAD,KAAc;AACrCC,EAAAA,IAAI,EAAEJ,UAD+B;AAErCG,EAAAA;AAFqC,CAAd,CAAlB;AAIP,OAAO,MAAME,YAAY,GAAIF,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEH,aADkC;AAExCE,EAAAA;AAFwC,CAAd,CAArB;AAKP,OAAO,MAAMG,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACpB,OAAD,CAAL,CACGqB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESlB,MAAD,IAAYgB,QAAQ,CAACF,YAAY,CAACd,MAAD,CAAb,CAF5B;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMqB,YAAY,GAAG,YAA4B;AAAA,MAA3BC,SAA2B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtD,UAAQA,MAAM,CAACV,IAAf;AACE,SAAKJ,UAAL;AACE,aAAOa,SAAS,CAACE,GAAV,CAAelB,KAAD,IACnBA,KAAK,CAACF,EAAN,IAAYmB,MAAM,CAACX,OAAP,CAAeR,EAA3B,GAAgC,EAAE,GAAGE,KAAL;AAAY,WAAGiB,MAAM,CAACX;AAAtB,OAAhC,GAAkEN,KAD7D,CAAP;;AAGF,SAAKI,aAAL;AACE,aAAO,CAAC,GAAGa,MAAM,CAACX,OAAX,CAAP;;AACF;AACE,aAAOU,SAAP;AARJ;AAUD,CAXM","sourcesContent":["import { API_URL } from \"../config\";\r\n\r\n//selector\r\nexport const getAllTables = (state) => state.tables;\r\nexport const getAllStatuses = (state) => state.statuses;\r\nexport const getTablesById = (state, id) =>\r\n  state.tables.find((table) => table.id == id);\r\n\r\n//actions\r\nconst createActionName = (actionName) => `app/tables/${actionName}`;\r\nconst EDIT_TABLE = createActionName(\"EDIT_TABLE\");\r\nconst UPDATE_TABLES = createActionName(\"UPDATE_TABLES\");\r\n\r\n//action creators\r\nexport const editTable = (payload) => ({\r\n  type: EDIT_TABLE,\r\n  payload,\r\n});\r\nexport const updateTables = (payload) => ({\r\n  type: UPDATE_TABLES,\r\n  payload,\r\n});\r\n\r\nexport const fetchTables = () => {\r\n  return (dispatch) => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((tables) => dispatch(updateTables(tables)));\r\n  };\r\n};\r\n\r\nexport const tableReducer = (statePart = [], action) => {\r\n  switch (action.type) {\r\n    case EDIT_TABLE:\r\n      return statePart.map((table) =>\r\n        table.id == action.payload.id ? { ...table, ...action.payload } : table\r\n      );\r\n    case UPDATE_TABLES:\r\n      return [...action.payload];\r\n    default:\r\n      return statePart;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}